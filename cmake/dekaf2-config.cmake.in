# dekaf2-config.cmake - package configuration file

if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.27.0)
	# allow mixed case find_package names (Boost needs this with cmake 3.27)
	cmake_policy(SET CMP0144 OLD)
endif()

if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.30.0)
	# use boosts own BoostConfig.cmake
	cmake_policy(SET CMP0167 OLD)
endif()

include(CMakeFindDependencyMacro)

# the required dependencies
find_dependency(Threads)
find_dependency(OpenSSL)
set(Boost_NO_WARN_NEW_VERSIONS ON)
find_dependency(Boost)

# optional dependencies
if (@SQLite3_FOUND@) # SQLite3_FOUND
	find_dependency(SQLite3)
endif()

if (@DEKAF2_DUAL_TARGET@) # DEKAF2_DUAL_TARGET
	# if no build type is used, pick the release version of the library
	if (NOT CMAKE_BUILD_TYPE)
		set(CMAKE_BUILD_TYPE "Release")
	endif()

	# we only support the Release and Debug output locations - other
	# build types have to pick either or
	if (CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo"
	 OR CMAKE_BUILD_TYPE STREQUAL "RelWithLabels"
	 OR CMAKE_BUILD_TYPE STREQUAL "release")
		set(DEKAF2_OUTPUT_PATH "/Release")
	elseif(CMAKE_BUILD_TYPE STREQUAL "debug")
		set(DEKAF2_OUTPUT_PATH "/Debug")
	else()
		set(DEKAF2_OUTPUT_PATH "/${CMAKE_BUILD_TYPE}")
	endif()
else() # DEKAF2_DUAL_TARGET
	# simply leave the output path empty when we output only to one target location
	set(DEKAF2_OUTPUT_PATH)
endif() # DEKAF2_DUAL_TARGET

get_filename_component(SELF_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
include("${SELF_DIR}${DEKAF2_OUTPUT_PATH}/dekaf2.cmake")
include("${SELF_DIR}${DEKAF2_OUTPUT_PATH}/dekaf2-setup.cmake")
