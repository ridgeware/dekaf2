
find_path(ZSTD_INCLUDE_DIR NAMES zstd.h)
find_library(ZSTD_LIBRARY NAMES zstd)

if(ZSTD_INCLUDE_DIR AND EXISTS "${ZSTD_INCLUDE_DIR}/zstd.h")
	file(STRINGS "${ZSTD_INCLUDE_DIR}/zstd.h" ZSTD_HEADER_CONTENTS REGEX "#define ZSTD_VERSION_[A-Z]+ +[0-9]+")
	string(REGEX REPLACE ".*#define ZSTD_VERSION_MAJOR +([0-9]+).*" "\\1" ZSTD_VERSION_MAJOR "${ZSTD_HEADER_CONTENTS}")
	string(REGEX REPLACE ".*#define ZSTD_VERSION_MINOR +([0-9]+).*" "\\1" ZSTD_VERSION_MINOR "${ZSTD_HEADER_CONTENTS}")
	string(REGEX REPLACE ".*#define ZSTD_VERSION_RELEASE +([0-9]+).*" "\\1" ZSTD_VERSION_RELEASE "${ZSTD_HEADER_CONTENTS}")

	set(ZSTD_VERSION_STRING "${ZSTD_VERSION_MAJOR}.${ZSTD_VERSION_MINOR}.${ZSTD_VERSION_RELEASE}")
	set(ZSTD_VERSION ${ZSTD_VERSION_STRING})
	unset(ZSTD_HEADER_CONTENTS)
endif()

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(
	ZSTD
	HANDLE_VERSION_RANGE
	REQUIRED_VARS ZSTD_LIBRARY ZSTD_INCLUDE_DIR
	VERSION_VAR ZSTD_VERSION
)

if(NOT ZSTD_FOUND)
	unset(ZSTD_LIBRARY)
	unset(ZSTD_INCLUDE_DIR)
else()
	set(ZSTD_LIBRARIES "${ZSTD_LIBRARY}")
	set(ZSTD_INCLUDE_DIRS "${ZSTD_INCLUDE_DIR}")
endif()
